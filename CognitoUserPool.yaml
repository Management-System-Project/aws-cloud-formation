AWSTemplateFormatVersion: 2010-09-09

Description: The template crates a Cognito User Pool with Cognito And Facebook authentication options


Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: Marketplace
      AutoVerifiedAttributes:
        - email
      EmailConfiguration:
        EmailSendingAccount: DEVELOPER
        SourceArn: arn:aws:ses:eu-north-1:781207506759:identity/info@glacies.store
        ReplyToEmailAddress: info@glacies.store

      MfaConfiguration: OFF
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false

      Policies:
        PasswordPolicy:
          MinimumLength: 12
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true
          Mutable: true
        - AttributeDataType: String
          Name: phone_number
          Required: false
          Mutable: true
        - AttributeDataType: String
          Name: password
          Required: true
          Mutable: true
        - AttributeDataType: String
          Name: given_name
          Required: true
          Mutable: true
        - AttributeDataType: String
          Name: family_name
          Required: true
          Mutable: true

  UserPoolClient:
    Type: 'AWS::Cognito::UserPoolClient'
    Properties:
      ClientName: MarketplaceClient
      UserPoolId: !Ref UserPool
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_PASSWORD_AUTH
      SupportedIdentityProviders:
        - COGNITO
        - Facebook
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid
      CallbackURLs:
        - 'https://glacies.store/'
      LogoutURLs:
        - 'https://glacies.store/logout'
      AllowedOAuthFlowsUserPoolClient: true

  UserPoolIdentityProvider:
    Type: 'AWS::Cognito::UserPoolIdentityProvider'
    Properties:
      ProviderName: Facebook
      AttributeMapping:
        email: email
        given_name: given_name
        family_name: family_name
      ProviderDetails:
        client_id: '{{resolve:ssm:facebook/client/id:1}}'
        client_secret: '{{resolve:ssm:facebook/client/secret:1}}'
        authorize_scopes: email
      ProviderType: Facebook
      UserPoolId: !Ref UserPool

  SellerGroup:
    Type: 'AWS::Cognito::UserPoolGroup'
    Properties:
      GroupName: Sellers
      UserPoolId: !Ref UserPool

  CustomerGroup:
    Type: 'AWS::Cognito::UserPoolGroup'
    Properties:
      GroupName: Customers
      UserPoolId: !Ref UserPool

  EmployeeGroup:
    Type: 'AWS::Cognito::UserPoolGroup'
    Properties:
      GroupName: Employees
      UserPoolId: !Ref UserPool
Outputs:
  UserPoolId:
    Description: The ID of the created User Pool
    Value: !Ref UserPool
  UserPoolClientId:
    Description: The ID of the created User Pool Client application
    Value: !GetAtt UserPoolClient.ClientId
